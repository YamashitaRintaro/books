## スキーマとは
スキーマとは。「枠組」や「構図」という意味の単語です。
DB設計では、DBのデータ構造やフォーマットの意味で使います。

## 3層スキーマとは
3層スキーマは、データベースアーキテクチャを以下の三つの抽象層に分けることで、データ管理を柔軟に行うことができます。

1. 外部スキーマ（プレゼンテーション層）
2. 概念スキーマ（論理層）
3. 内部スキーマ（物理層）

### 外部スキーマ
システムの利用者であるユーザーから見て、DBがどのような機能とインターフェースを持っているかを定義するスキーマです。
簡単にいうと、「ユーザーからみたDB」です。

具体的には、以下の特徴と役割を持ちます：
- ユーザービューの定義: 各アプリケーションやユーザーグループに合わせたカスタマイズされたビューを提供します。
- データアクセスの抽象化: 実際のデータ構造からユーザーを隔離し、使いやすいインターフェースを提供します。
- セキュリティ保護: 必要なデータのみをユーザーに公開し、機密情報の漏洩を防ぎます。

### 概念スキーマ
DBに保存するデータの要素やデータ同士の関係を記述するスキーマです。
簡単にいうと、「開発者から見たDB」です。

具体的には、以下の特徴と役割を持ちます：
1. データモデルの定義: データの種類、関連性、制約等を論理的に定義します。
2. データの整合性保持: データベース全体の整合性ルールを設定し、データの正確性と信頼性を保証します。
3. 独立性の確保: 内部スキーマの変更が外部ビューに影響を与えないように中間層として機能します。

### 内部スキーマ
概念スキーマで定義された論理データモデルを具体的にどうDBMSに格納するのかを定義するスキーマです。
簡単にいうと、「DBMSからみたDB」です。

具体的には、以下の特徴と役割を持ちます：
1. ストレージ構造の定義: データファイル、インデックス、記録方法などの物理的なデータ格納方式を具体的に指定します。
2. パフォーマンス最適化: データアクセスの効率を高めるために、適切なインデックスの作成やデータ分布の最適化が行われます。
3. バックアップと回復: データの安全性を確保するためのバックアップ手順や、障害からの回復手順がこの層で管理されます。

## 概念スキーマの存在理由
概念スキーマは、内部スキーマ（物理層）と外部スキーマ（ユーザーインターフェース層）の間に位置し、これら二つの層をつなぐ役割を果たします。
この配置により、内部スキーマの変更が外部スキーマに影響を与えず、また外部スキーマの要求が内部スキーマに直接的な影響を与えることなく適用できるため、データの物理的および論理的独立性が保たれます。